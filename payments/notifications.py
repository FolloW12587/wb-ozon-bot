from aiogram import types
from commands.send_message import send_message

import config
from db.base import UserSubscription
from logger import logger
from schemas import MessageInfo


async def notify_user_about_fail(user_id: int):
    logger.info("Notifying user %s about transaction processing fail", user_id)
    text = f"""
*‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É*

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ [–Ω–∞–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É]({config.SUPPORT_BOT_URL}) –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–º–æ–∂–µ–º.
"""
    btn = types.InlineKeyboardButton(text="–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", url=config.SUPPORT_BOT_URL)

    markup = types.InlineKeyboardMarkup(inline_keyboard=[[btn]])
    try:
        await send_message(user_id, MessageInfo(text=text, markup=markup))
    except Exception:
        logger.error(
            "Error in notifying user abput failed transaction processing", exc_info=True
        )


async def notify_user_about_purchsed_subscription(
    user_subscription: UserSubscription, user_id: int
):
    logger.info(
        "Notifying user %s about new purchased subscription %s",
        user_id,
        user_subscription.id,
    )
    text = f"""
*üéâ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!*

–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É ‚Äî –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º:

‚úîÔ∏è –ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã
‚úîÔ∏è –ì—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω
‚úîÔ∏è –í—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏

*üóì –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ {user_subscription.active_to}*

_–ú—ã –∑–∞—Ä–∞–Ω–µ–µ –Ω–∞–ø–æ–º–Ω–∏–º –≤–∞–º –∑–∞ 5 –¥–Ω–µ–π –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –ø—Ä–æ–¥–ª–∏—Ç—å –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞ –≤ —Ä–∞–±–æ—Ç–µ._

–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –∏ –≤—ã–≥–æ–¥–Ω—ã—Ö —Å–∫–∏–¥–æ–∫! üí∏"""
    try:
        await send_message(user_id, MessageInfo(text=text))
    except Exception:
        logger.error("Error in notifying user about new subscription", exc_info=True)
        raise


async def notify_user_about_referal_free_subscription(user_id: int, is_invited: bool):
    """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ –µ–º—É –¥–æ—Å—Ç–∞–ª–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ. –ï—Å–ª–∏ `is_invited == True`, —Ç–æ —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
    –ï—Å–ª–∏ `is_invited == False`, —Ç–æ —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª."""
    logger.info(
        "Notifying user %s about free referal subscription. Is invited %s",
        user_id,
        is_invited,
    )
    text = ""
    if is_invited:
        text = """
*üéâ –ú—ã –¥–∞—Ä–∏–º –≤–∞–º 14 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏!*

–ó–∞ —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ‚ò∫Ô∏è
"""
    else:
        text = """
–ó–∞ –≤–∞—à –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞

*üéâ –ú—ã –¥–∞—Ä–∏–º –≤–∞–º 14 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏!*
"""

    try:
        await send_message(user_id, MessageInfo(text=text))
    except Exception:
        logger.error(
            "Error in notifying user %s about free referal subscription. Is invited %s",
            user_id,
            is_invited,
            exc_info=True,
        )
        raise
