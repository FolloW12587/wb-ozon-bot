services:
  bot:
    build: .
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: psql_db
      LOG_DIR: /var/log/bot
    ports:
      - '8001:8001'
    command: sh -c 'alembic upgrade head && python main.py'
    networks:
      - bot_network
    volumes:
      - ./static:/app/static
      - ./data:/app/data
      - ./logs/bot:/var/log/bot
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
    depends_on:
      - psql_db

  redis_tg_bot_db:
    image: redis:alpine
    restart: always
    networks:
      - bot_network
    cpus: '0.5'
    ports:
      - 6379:6379
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_PASSWORD} --save "10" "1" --appendonly no
    volumes:
      - redis_tg_bot_data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "20m"

  arq_high:
    build: .
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=psql_db
      - REDIS_HOST=redis_tg_bot_db
      - LOG_DIR=/var/log/arq
    networks:
      - bot_network
    volumes:
      - ./logs/arq:/var/log/arq
    command: arq background.high_worker.WorkerSettings
    depends_on:
      - redis_tg_bot_db

  arq_low:
    build: .
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=psql_db
      - REDIS_HOST=redis_tg_bot_db
      - LOG_DIR=/var/log/arq_low
    networks:
      - bot_network
    volumes:
      - ./logs/arq_low:/var/log/arq_low
    command: arq background.low_worker.WorkerSettings
    depends_on:
      - redis_tg_bot_db

  arq_popular:
    build: .
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=psql_db
      - REDIS_HOST=redis_tg_bot_db
      - LOG_DIR=/var/log/arq_popular
    networks:
      - bot_network
    volumes:
      - ./logs/arq_popular:/var/log/arq_popular
    command: arq background.popular_worker.WorkerSettings
    depends_on:
      - redis_tg_bot_db

  psql_db:
    image: postgres:14
    restart: always
    networks:
      - bot_network
    env_file:
      - ./.env
    environment:
      - TZ=Europe/Moscow
    cpus: '1.0'
    mem_limit: 2g
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "20m"

networks:
  bot_network:
    name: local_network
    external: true

volumes:
  postgres-data:
  redis_tg_bot_data:
